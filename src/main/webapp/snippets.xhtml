<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1
/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">

	<ui:composition template="/templates/template.xhtml">
		<ui:define name="head">
			<script type="text/javascript">
			function showSnippet(id, title, icon) {
				const hydrateElements = async () => {
					  const response = await fetch('#{request.contextPath}/rest/articles/getArticle?articleId=' + id);
					  const myJson = await response.json(); //extract JSON from the http response
					  var bodyContent = 'Ah, an empty snippet!!';
					  if (myJson.body != null) {
						  bodyContent = myJson.body.replace(/&lt;code\ class=\"/g, '&lt;code class="codeblock ');
					  }
					  $('#snippet-body').html(bodyContent);
					  $('#snippet-title').html(title);
					  $('#snippet-image').attr("src", "data:image/png;base64," + icon);
					  $('#snippet-pop').fadeIn('slow');

					  Array.from(document.getElementsByClassName("codeblock")).forEach((el) => {
					     hljs.highlightBlock(el);
					  });
				}
				hydrateElements();
			}

			function closeSnippet() {
				$('#snippet-pop').fadeOut('slow');
			}
			</script>
		</ui:define>
		
		<ui:define name="content">
		
			<div class="section-container article-content-box snippet-content-box">
				<p style="font-size: 22px;color:#06527b">
				A dumping ground for everything that doesn't qualify to be an article. Snippets may have an explanation, they may not.
				Simply useful little pieces of code I've used to solve a specific problem and I feel may be useful in the future!</p>
			</div>
			
			<h:form>
				<div class="snippet-search-box">
				  <p:panelGrid columns="3" styleClass="snippet-search-grid">
					<p:inputText id="snippetsearchtext" value="#{inMemorySearch.snippetQuery}" style="font-size:30px;"/>
					<p:commandButton action="#{inMemorySearch.loadSnippets()}" icon="fa fa-search"
						style="height:50px;width:50px;"
						oncomplete="animateCards();" update=":snippets:showSnippets"/>
					<p:watermark for="snippetsearchtext" value="Search..." id="watermark" />
				  </p:panelGrid>
				</div>
			</h:form>
		
			<div id="snippet-pop" class="snippet-popup">
				<div class="snippet-close">
					<i onclick="closeSnippet();" style="cursor: pointer;" class="fa fa-close fa-lg"/>
				</div>
				<div style="overflow:auto;max-height:380px">
					<span style="font-size: 18px;font-weight: bold;color:#06527b">
						<div id="snippet-title" class="snippet-title"/>
					</span>
					<div id="snippet-body" class="snippet-body"/>
					<div class="watermark-image">
						<img id="snippet-image" class="snippet-image" src=""/>
					</div>
				</div>
			</div>
		
			<h:form id="snippets">
				<div class="snippet-container">
					<div class="article-container">
						<br/>
						<h:panelGrid id="showSnippets">
							<ui:repeat var="article"
								value="#{inMemorySearch.loadSnippets()}">
								<div class="snippet-card"  
									onclick="showSnippet('#{article.id}', '#{article.title}', '#{article.icon}');">
									<div class="top-section">
										<div class="snippet-circular-border">
											<h:graphicImage value="data:image/png;base64,#{article.icon}"
												class="snippet-graphic" />
										</div>
										<div class="snippet-text"><h:outputText value="#{article.title}"/></div>
									</div>
									<svg class="snippet-svg-background" viewBox="0 0 1600 600"> 
										<path class="blob" d="#{blobController.randomBlob}"/>
									</svg>
								</div>
							</ui:repeat>
						</h:panelGrid>
					</div>
				</div>
			</h:form>
				
			<div class="snippet-card active" style="valign:top;display:none"/>

			<script type="text/javascript">
			function handleMouseover(e) {
				document.querySelector(".active").classList.remove("active");
			    e.target.closest(".snippet-card").classList.add("active");
			}

			animateCards();

			function animateCards() {
				document.querySelectorAll(".snippet-card").forEach(card => card.addEventListener("mouseover", handleMouseover) );
			}
			 </script>
		</ui:define>
	</ui:composition>

</html>